use CRUD;

--criar um validator para garantir que os documentos inseridos respeitem algumas regras:

db.createCollection(
    "carro",
    {
        validator: {
            $jsonSchema: {
                bsonType: "object",
                required: ["modelo", "ano"],
                properties: {
                    modelo: {
                        bsonType: "string",
                        description: "Modelo é string e é obrigatório."
                    },
                    fabricante: {
                        bsonType: "string",
                        minLength: 3,
                        maxLength: 30,
                        description: "Deve ser string."
                    },
                    ano: {
                        bsonType: "int",
                        minLength: 2015,
                        maxLength: 2025,
                        description: "Inteiro entre [2015, 2025] e é obrigatório.]"
                    }
                }
            }
        }
    }
);

--O validator cria uma collection "carro", com os campos modelo e ano obrigatórios e algumas regras opcionais nos campos.

--inserts com erros:

Dissemos que o campo "ano" recebe um int, mas passamos string.

db.carro.insert({modelo: 'HB20', fabricante: 'Hyundai', ano: '2017'});

Dissemos que o campo "ano" recebe um int, mas por padrão, o mongo enxerga valore numéricos como double.

db.carro.insert({modelo: 'HB20', fabricante: 'Hyundai', ano: 2020});

--Uma possível correção:

db.carro.insert({modelo: 'HB20', fabricante: 'Hyundai', ano: NumberInt('2017')});

db.carro.insert({modelo: 'HB20', fabricante: 'Hyundai', ano: NumberInt(2020)});

-Capped collection:
--Um um parâmetro boolean opcional no validator que define a criação de uma coleção LIMITADA.
--Por padrão, coleções são ilimitadas.

--Quando especificar uma capped collection, é necessário determinar o parâmetro "size" e "max".
---Size: O tamanho máximo, em bytes, da collection. Tem precedência sobre o Max.
---Max: Número máximo de documentos permitidos dentro da collection.
--Quando o limite é atingido e um novo documento precisar ser inserido, o mongo deleta documentos mais antigos.

--Exemplo:

db.createCollection("log_simulado", {
    capped: true,
    size: 1024,
    max: 5
});

db.log_simulado.insert({n: 1, desc: '1xxx'});
db.log_simulado.insert({n: 2, desc: '2xxx'});
db.log_simulado.insert({n: 3, desc: '3xxx'});
db.log_simulado.insert({n: 4, desc: '4xxx'});
db.log_simulado.insert({n: 5, desc: '5xxx'});

db.log_simulado.find();

db.log_simulado.insert({n: 6, desc: '6xxx'});

db.log_simulado.find();

--O registro 1 foi apagado.